C51 COMPILER V9.00   ALARM_CLOCK1                                                          05/17/2017 14:47:04 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ALARM_CLOCK1
OBJECT MODULE PLACED IN alarm clock1.OBJ
COMPILER INVOKED BY: D:\新建文件夹\C51\BIN\C51.EXE alarm clock1.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"main.h"
   2          
   3          void time_up();
   4          void time_down();
   5          
   6          extern uchar alarm1_10;
   7          extern uchar menu_10;
   8          extern uchar long_press;
   9          extern uchar flag;
  10          
  11          //---存储顺序分别是时分秒十位、个位//
  12          uchar alarm_clock[] = {0x01, 0x00, 0x00};
  13          //闹钟开关
  14          bit on_off = 0;
  15          uchar clock_keytemp = 0,i_c = 0;
  16          
  17          //键盘扫描状态机
  18          void clock_scan()
  19          {
  20   1              static char clock_state = 0; //闹钟扫描状态
  21   1              
  22   1              if (key2 == 0)
  23   1                      clock_keytemp = 2;
  24   1              else if (key3 == 0)
  25   1                      clock_keytemp = 3;
  26   1              else if (key4 == 0)
  27   1                      clock_keytemp = 4;
  28   1              else
  29   1                      clock_keytemp = 0;
  30   1      
  31   1              switch(clock_state)
  32   1              {
  33   2                      case 0: if(clock_keytemp == 0)
  34   2                                      {
  35   3                                              clock_state = 1;
  36   3                                      }
  37   2                                      else
  38   2                                              clock_state = 0;
  39   2                                      break;          
  40   2                      case 1: if(clock_keytemp == 0)
  41   2                                      {
  42   3                                              clock_state = 2;
  43   3                                      }
  44   2                                      else
  45   2                                              clock_state = 0;
  46   2                                      break;
  47   2                      case 2: if(clock_keytemp != 0) 
  48   2                                      {
  49   3                                              if(clock_keytemp == 2)
  50   3                                              {
  51   4                                                      time_up();      
  52   4                                              }
  53   3                                              else if(clock_keytemp == 3)
  54   3                                              {
  55   4                                                      time_down();
C51 COMPILER V9.00   ALARM_CLOCK1                                                          05/17/2017 14:47:04 PAGE 2   

  56   4                                              }
  57   3                                              else if(clock_keytemp == 4)
  58   3                                              {
  59   4                                                      i_c++;
  60   4                                              }
  61   3                                              clock_state = 0;
  62   3                                      }
  63   2                                      else
  64   2                                              clock_state = 2;
  65   2                                      break;
  66   2                      
  67   2              }
  68   1      }
  69          
  70          
  71          void time_up()
  72          {
  73   1              if(i_c == 0)
  74   1              {
  75   2                      if(alarm_clock[i_c] >=24)
  76   2                              alarm_clock[i_c] = 1;
  77   2                      else 
  78   2                              alarm_clock[i_c]++;
  79   2              }
  80   1              else if(i_c == 1)
  81   1              {
  82   2                       if(alarm_clock[i_c] >=60)
  83   2                              alarm_clock[i_c] = 0;
  84   2                      else 
  85   2                              alarm_clock[i_c]++;
  86   2              }
  87   1              else if(i_c == 2)
  88   1              {
  89   2                       if(alarm_clock[i_c] >=60)
  90   2                              alarm_clock[i_c] = 0;
  91   2                      else 
  92   2                              alarm_clock[i_c]++;
  93   2              }
  94   1      }
  95          
  96          void time_down()
  97          {
  98   1              if(i_c == 0)
  99   1              {
 100   2                      if(alarm_clock[i_c] == 1)
 101   2                              alarm_clock[i_c] = 24;
 102   2                      else 
 103   2                              alarm_clock[i_c]--;
 104   2              }
 105   1              else if(i_c == 1)
 106   1              {
 107   2                       if(alarm_clock[i_c] == 0)
 108   2                              alarm_clock[i_c] = 59;
 109   2                      else 
 110   2                              alarm_clock[i_c]--;
 111   2              }
 112   1              else if(i_c == 2)
 113   1              {
 114   2                       if(alarm_clock[i_c] == 0)
 115   2                              alarm_clock[i_c] = 59;
 116   2                      else 
 117   2                              alarm_clock[i_c]--;
C51 COMPILER V9.00   ALARM_CLOCK1                                                          05/17/2017 14:47:04 PAGE 3   

 118   2              }
 119   1      }
 120          /*-----------------------------------------------
 121                                                  闹钟主函数
 122          -----------------------------------------------*/
 123          void alarm_clock1()
 124          {
 125   1              
 126   1              while(flag == 3)
 127   1              {
 128   2                      display(8,alarm_clock[0]/10);
 129   2                      display(7,alarm_clock[0]%10);
 130   2                      display(6,17);
 131   2                      display(5,alarm_clock[1]/10);
 132   2                      display(4,alarm_clock[1]%10);
 133   2                      display(3,17);
 134   2                      display(2,alarm_clock[2]/10);
 135   2                      display(1,alarm_clock[2]%10);   
 136   2      
 137   2                      if(alarm1_10 >=10)
 138   2                      {
 139   3                              alarm1_10 = 0;
 140   3                              clock_scan();
 141   3                      }
 142   2                      
 143   2      
 144   2                      if(menu_10 >= 10)
 145   2                      {
 146   3                              menu_10 = 0;
 147   3                              menuscan();
 148   3                      }       
 149   2              }
 150   1      
 151   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    575    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
